name: Monitor Home Assistant Versions

on:
  # 定时触发（每天执行一次）
  schedule:
    - cron: '0 0 * * *'
  # 手动触发（方便测试）
  workflow_dispatch:

jobs:
  monitor-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get remote stable.json
        id: get-remote
        run: |
          # 获取远程 stable.json 文件
          REMOTE_URL="https://raw.githubusercontent.com/home-assistant/version/stable.json"
          curl -s -o remote_stable.json "$REMOTE_URL"
          
          # 验证文件是否下载成功
          if [ ! -f "remote_stable.json" ]; then
            echo "Failed to download remote stable.json"
            exit 1
          fi
          
          echo "Remote stable.json downloaded successfully"

      - name: Compare versions
        id: compare
        run: |
          # 确保本地文件存在
          if [ ! -f "stable.json" ]; then
            echo "Local stable.json not found. Creating a new one..."
            cp remote_stable.json stable.json
            echo "version_updated=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 检查是否有更新
          if cmp -s stable.json remote_stable.json; then
            echo "No changes in stable.json"
            echo "version_updated=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "version_updated=true" >> $GITHUB_OUTPUT
          
          # 提取 homeassistant 部分的变更
          LOCAL_HOMEASSISTANT=$(jq '.homeassistant' stable.json)
          REMOTE_HOMEASSISTANT=$(jq '.homeassistant' remote_stable.json)
          
          # 创建变更摘要
          echo "change_summary<<EOF" >> $GITHUB_OUTPUT
          echo "## Home Assistant 版本更新\n" >> $GITHUB_OUTPUT
          
          # 遍历每个平台，检查版本变更
          echo "$REMOTE_HOMEASSISTANT" | jq -r 'keys[] as $k | "\($k): \(.[$k])"' | while read -r line; do
            platform=$(echo "$line" | cut -d: -f1)
            new_version=$(echo "$line" | cut -d: -f2 | xargs)
          
            old_version=$(echo "$LOCAL_HOMEASSISTANT" | jq -r ".[\"$platform\"]")
          
            if [ "$old_version" != "$new_version" ]; then
              echo "- **$platform**: $old_version → $new_version" >> $GITHUB_OUTPUT
            fi
          done
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update local file if changed
        if: steps.compare.outputs.version_updated == 'true'
        run: |
          # 复制远程文件到本地
          cp remote_stable.json stable.json
          
          # 提交更新
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add stable.json
          git commit -m "Update Home Assistant versions from upstream"
          git push
          
          echo "Local stable.json updated and committed"

      - name: Send notification
        if: steps.compare.outputs.version_updated == 'true'
        run: |
          # 设置时区为东八区并格式化时间
          timestamp=$(TZ='Asia/Shanghai' date +"%Y-%m-%d %H:%M:%S%:z")
          
          # 构建通知消息
          message=$(cat <<EOF
          {
            "msgtype": "markdown",
            "markdown": {
              "title": "Home Assistant 版本更新",
              "text": "🚀 **更新时间: $timestamp**\n\n${{ steps.compare.outputs.change_summary }}"
            },
            "at": {
              "isAtAll": false
            }
          }
          EOF
          )
          
          # 发送通知
          curl -s -X POST "${{ secrets.DINGTALK_WEBHOOK }}" \
            -H "Content-Type: application/json" \
            -d "$message"
          
          echo "Notification sent for version updates"